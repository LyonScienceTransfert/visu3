<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		creationComplete="skin1_creationCompleteHandler(event)" 
		xmlns:layout="sparks.layout.*"
		xmlns:layout1="com.lyon2.controls.sparks.layout.*">
	<fx:Script>
		<![CDATA[
			import com.ithaca.utils.URLValidator;
			import com.ithaca.utils.UtilFunction;
			import com.ithaca.visu.model.ActivityElementType;
			import com.ithaca.visu.ui.utils.IconEnum;
			
			import gnu.as3.gettext.FxGettext;
			import gnu.as3.gettext._FxGettext;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			[Bindable]
			private var fxgt:_FxGettext;

			
			private static var LIFT_EDITABLED_COMPONENT:int = 75; 
			
			protected function skin1_creationCompleteHandler(event:FlexEvent):void
			{
				fxgt = FxGettext;
			}
			
			protected function group1_clickHandler(event:MouseEvent):void
			{
				if(event.target is Group)
				{
					this.hostComponent.titleDisplay_clickHandler(event);
				}
			}
// STATEMANT
			protected function addStatement_focusInHandler(event:FocusEvent):void
			{
				if(addStatement.text == "ajout une nouvelle consigne ici"){
					addStatement.text = "";
					addStatement.setStyle("fontStyle","normal");
					addStatement.setStyle("color","#000000");
				}
			}

			protected function addStatement_focusOutHandler(event:FocusEvent):void
			{
				if(addStatement.text == ""){
					this.setMessageStatement();
				}
			}
			
			protected function addStatement_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER && addStatement.text != "")
				{
					this.validStatementButton_clickHandler(event);
				}
			}
			
			protected function validStatementButton_clickHandler(event:*):void
			{
				// add statement
				if(addStatement.text != "ajout une nouvelle consigne ici" && addStatement.text != "")
				{
					this.hostComponent.addStatement(addStatement.text);
					addStatement.text = "";
					stage.focus = addStatement;
				}
			}

			private function setMessageStatement():void
			{
				addStatement.text = "ajout une nouvelle consigne ici";
				addStatement.setStyle("fontStyle","italic");
				addStatement.setStyle("color","#BBBBBB");
			}
// MEMO
			protected function memoDisplay_focusInHandler(event:FocusEvent):void
			{
				if(memoDisplay.text == "entrer un nouveau memo ici")
				{
					memoDisplay.text = "";
					memoDisplay.setStyle("fontStyle","normal");
					memoDisplay.setStyle("color","#000000");
				}
			}

			protected function memoDisplay_focusOutHandler(event:FocusEvent):void
			{
				if(memoDisplay.text == ""){
					this.hostComponent.setMessageMemo();
				}else
				{
					// add memo
					this.hostComponent.updateMemo(memoDisplay.text);
				}
			}
// DOCUMENT
			protected function addTitreDocument_focusOutHandler(event:FocusEvent):void
			{
				if(addTitreDocument.text == ""){ 
					this.setMessageTitreDocument();
				}
			}
			
			protected function addTitreDocument_focusInHandler(event:FocusEvent):void
			{
				if(addTitreDocument.text == "ajout une nouvelle titre de document ici"){
					addTitreDocument.text = "";
					addTitreDocument.setStyle("fontStyle","normal");
					addTitreDocument.setStyle("color","#000000");
				}
			}

			protected function addLienDocument_focusInHandler(event:FocusEvent):void
			{
				if(addLienDocument.text == "ajout une nouvelle lien de document ici"){
					addLienDocument.text = "";
					addLienDocument.setStyle("fontStyle","normal");
					addLienDocument.setStyle("color","#000000");
				}
			}

			protected function addLienDocument_focusOutHandler(event:FocusEvent):void
			{
				if(addLienDocument.text == ""){
					this.setMessageLienDocument();
				}
			}

			protected function validButtonDocument_clickHandler(event:MouseEvent):void
			{
				var type:String="";
				var titre:String = addTitreDocument.text;
				if(URLValidator.isUrl(addLienDocument.text))
				{
					// check if lient is video the toytube
					if(UtilFunction.checkVideoId(addLienDocument.text))
					{
						type = ActivityElementType.VIDEO;
					}else
					{
						type = ActivityElementType.IMAGE;
					}
					if(titre =="ajout une nouvelle titre de document ici")
					{
						titre = "...document...";
					}
					this.hostComponent.addDocument(titre, addLienDocument.text, type);
					addLienDocument.text = "";
					stage.focus = addLienDocument;					
				}else
				{
					// set text to addLienDocument
					addLienDocument.text = "ajout une nouvelle lien de document ici";
					stage.focus = addLienDocument;
				}
			}

			private function setMessageTitreDocument():void
			{
				addTitreDocument.text = "ajout une nouvelle titre de document ici";
				addTitreDocument.setStyle("fontStyle","italic");
				addTitreDocument.setStyle("color","#BBBBBB");
			}
			
			private function setMessageLienDocument():void
			{
				addLienDocument.text = "ajout une nouvelle lien de document ici";
				addLienDocument.setStyle("fontStyle","italic");
				addLienDocument.setStyle("color","#BBBBBB");
			}
// KEYWORD
			protected function addKeyword_focusInHandler(event:FocusEvent):void
			{
				if(addKeyword.text == "entrer nouveau mot-clé"){
					addKeyword.text = "";
					addKeyword.setStyle("fontStyle","normal");
					addKeyword.setStyle("color","#000000");
				}
			}
			
			protected function addKeyword_focusOutHandler(event:FocusEvent):void
			{
				if(addKeyword.text == ""){
					this.setMessageKeyword();
				}
			}
			
			protected function addKeyword_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER && addKeyword.text != "")
				{
					// add statement
					if(addKeyword.text != "entrer nouveau mot-clé" && addKeyword.text != "")
					{
						this.hostComponent.addKeyword(addKeyword.text);
						addKeyword.text = "";
						stage.focus = addKeyword;
					}
				}
			}
			
			private function setMessageKeyword():void
			{
				addKeyword.text = "entrer nouveau mot-clé";
				addKeyword.setStyle("fontStyle","italic");
				addKeyword.setStyle("color","#BBBBBB");
			}
// TITRE ACTIVITY			
			protected function titleActivity_focusOutHandler(event:FocusEvent):void
			{
				this.hostComponent.addTitreActivity(titleActivity.text);
			}
// DELETE ACTIVITY
			protected function buttonDeleteActivity_clickHandler(event:MouseEvent):void
			{
				Alert.yesLabel = "Oui";
				Alert.noLabel = "Non";
				Alert.show("Voulez-vous supprimer l'activity?",
					"Confirmation", Alert.YES|Alert.NO, null, deleteActivityConfirmed); 
				
			}
			
			private function deleteActivityConfirmed(event:CloseEvent):void{
				if( event.detail == Alert.YES)
				{
					this.hostComponent.deleteActivity();
				}
			}

			protected function durationActivity_changeHandler(event:Event):void
			{
				var numericStepper:NumericStepper = event.target as NumericStepper;
				this.hostComponent.changeDuration(numericStepper.value);
			
			}


			protected function titleActivity_changeHandler(event:TextOperationEvent):void
			{
				this.hostComponent.addTitreActivity(titleActivity.text);

			}
			protected function memoDisplay_changeHandler(event:TextOperationEvent):void
			{
				this.hostComponent.updateMemo(memoDisplay.text);
			}

		]]>
	</fx:Script>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.view.session.controls.ActivityDetailEdit")]
	</fx:Metadata>

	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="normalEditable"/>
		<s:State name="openEditable"/>
	</s:states>
	
	<s:Rect id="background" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<!--- @private -->
			<s:SolidColor id="bgFill" color="#ffffff"/>
		</s:fill>
	</s:Rect>
	
	<s:Group width="100%" height="30" click="group1_clickHandler(event)">				
		<!--<s:Rect top="0" left="0" bottom="0" right="0">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<s:GradientEntry color="#CCCCCC" />
					<s:GradientEntry color="#999999" />
				</s:LinearGradientStroke>
			</s:stroke>
			<s:fill>
				<s:LinearGradient rotation="90">					
					<s:GradientEntry color="#EFEFEF" />						
					<s:GradientEntry color="#CCCCCC" />						
				</s:LinearGradient>
			</s:fill>
		</s:Rect>-->
		<s:Path data="M 0 0 L 7 5 L 0 10 L 0 0 Z" 
				rotation.open="90"
				verticalCenter="0" left="3"
				 rotation.openEditable="90">
			<s:postLayoutTransformOffsets>
				<s:TransformOffsets id="tOffsets" x.open="0" y.open="0" x.openEditable="0" y.openEditable="0"/>  
			</s:postLayoutTransformOffsets>
			<s:fill>
				<s:SolidColor color="#333333"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter angle="90"  distance="1" blurX="2" blurY="2" alpha=".7" inner="true" />
				<s:DropShadowFilter angle="180" distance="1" blurX="1" blurY="1" color="#FFFFFF" />
			</s:filters>
		</s:Path>
		
		<s:Label left="25" top="10">
			<!--<s:text>{fxgt.gettext("titre : ")}</s:text>-->
			<s:text>Titre d'acitivité: </s:text>
		</s:Label>
<!-- LABEL ACTIVITY-->
		<s:TextInput id="titleActivity" left="200" top="5" right="150" color="#121212"
				 fontSize="14" fontWeight="bold" maxHeight="22" maxChars="80"
				  focusOut="titleActivity_focusOutHandler(event)" 
				  change="titleActivity_changeHandler(event)"
				  includeIn="normalEditable,openEditable" top.normalEditable="5" left.normalEditable="120" right.normalEditable="150" top.openEditable="5" left.openEditable="120" right.openEditable="150">
			<!--<s:filters>
				<mx:DropShadowFilter distance="1" angle="90" blurX="3" blurY="3" alpha=".5" />
			</s:filters>-->
		</s:TextInput>
<!-- DURATION -->
		<s:NumericStepper id="durationActivity" top="3" width="44" right="2" 
						  maximum="200" value="10"
						   change="durationActivity_changeHandler(event)" includeIn="normalEditable,openEditable"/>
		<s:Label id="durationDisplay" right="50" top="10" text="durée" text.normal="durée :" text.normalEditable="durée :" text.open="durée :" text.openEditable="durée :"/>
<!-- DELETE ACTIVITY -->
		<mx:Button  id="buttonDeleteActivity" top="5" right="90" 
					icon="{IconEnum.getIconByName('delete')}"
					click="buttonDeleteActivity_clickHandler(event)" includeIn="normalEditable,openEditable" width="30" top.normalEditable="5" right.normalEditable="95">
			<mx:toolTip>Supprimer l'acitivité</mx:toolTip>
		</mx:Button>
		<s:Label includeIn="normal,open" text="10 " top="10" id="durationActivityLabel" right="30" width="18"/>
		<s:Label includeIn="normal,open" text="min." top="10" right="5"/>
		<s:Label includeIn="normal,open" height="22" textAlign="justify" maxDisplayedLines="1"
				 text="Label" id="titleActivityLable" top="10" right="100" left="{LIFT_EDITABLED_COMPONENT}" fontSize="14" fontWeight="bold" top.normal="10" left.normal="120" right.normal="100" top.open="10" left.open="120" right.open="100"/>
	</s:Group>
	
	<s:Group top="30" bottom="10" includeIn="open,openEditable" id="content" width.open="100%" top.open="30" bottom.open="10" left.openEditable="5" left.open="5" top.openEditable="30" bottom.openEditable="10" width.openEditable="100%">
		<s:layout>
			<s:VerticalLayout  gap="10"/>
		</s:layout>
<!-- STATEMENTS -->
		<s:Group width="100%">
			<s:Label paddingLeft="5" text="Consignes : "/>
			<s:Group id="statementGroup" left="{LIFT_EDITABLED_COMPONENT}" width.openEditable="100%" left.open="{LIFT_EDITABLED_COMPONENT}" right.open="0">
				<s:layout>
					<s:VerticalLayout />
				</s:layout>
			</s:Group>
		</s:Group>
<!-- ADD STATEMENT -->
		<s:Group  width="100%">
			<s:TextArea  id="addStatement" maxHeight="25" right="15" fontStyle="italic" color="#BBBBBB"
						left="{LIFT_EDITABLED_COMPONENT+5}" verticalScrollPolicy="auto" textAlign="justify" 
						focusIn="addStatement_focusInHandler(event)"
						keyUp="addStatement_keyUpHandler(event)" 
						focusOut="addStatement_focusOutHandler(event)" includeIn="openEditable">
				<s:text>ajout une nouvelle consigne ici</s:text>
			</s:TextArea>	
			<s:Button right="15" top="27" bottom="2" click="validStatementButton_clickHandler(event)" includeIn="openEditable">
				<s:label>Valider</s:label>
			</s:Button>
		</s:Group>
<!-- DOCUMENTS -->		
		<s:Group width="100%">
			<s:Label left="5" text="Documents : "/>
			<s:Group id="documentGroup" left="{LIFT_EDITABLED_COMPONENT}" width="100%">
				<s:layout>
					<s:TileLayout requestedColumnCount="2" horizontalGap="50"/>
				</s:layout>
			</s:Group>	
		</s:Group>
<!-- ADD DOCUMENT -->
		<s:Group width="100%" left="10">
			<s:TextArea  id="addTitreDocument" top="0" right="5" maxHeight="22" minWidth="290" textAlign="center"
						 fontStyle="italic" color="#BBBBBB"
						 focusOut="addTitreDocument_focusOutHandler(event)"
						   focusIn="addTitreDocument_focusInHandler(event)" includeIn="openEditable">
				<s:text>ajout une nouvelle titre de document ici</s:text>
			</s:TextArea>
			<s:TextArea  id="addLienDocument" right="140" maxHeight="22" top="25" minWidth="220"
						 fontStyle="italic" color="#BBBBBB"
						  focusIn="addLienDocument_focusInHandler(event)"
						   focusOut="addLienDocument_focusOutHandler(event)" includeIn="openEditable">
				<s:text>ajout une nouvelle lien de document ici</s:text>
			</s:TextArea>
			<s:Button  id="validButtonDocument" right="5" top="25"
					    click="validButtonDocument_clickHandler(event)" includeIn="openEditable">
				<s:label>Ajouter le document</s:label>
			</s:Button>
			<s:Label includeIn="openEditable" text="Titre de document :" top="5" right="300"/>
			<s:Label includeIn="openEditable" text="Url de document :" top="30" right="365"/>
		</s:Group>
<!-- KEYWORD -->
		<s:Group width="100%" height="100" height.open="100" height.openEditable="100" right="5">
			<s:Label left="5" text="Mots-clés : "/>
			<s:Scroller top="8" left="{LIFT_EDITABLED_COMPONENT}" bottom="0" right="2" bottom.openEditable="30">
				<s:Group id="keywordGroup"  left="0" width="100%"  top="0"  height="100%">
					<s:layout>
						<layout1:FlowLayout/>
					</s:layout>
				</s:Group>	
			</s:Scroller>
<!-- ADD KEYWORD -->
			<s:TextArea  id="addKeyword" height="22" right="2" bottom="2"
							 fontStyle="italic" color="#BBBBBB"
							 focusIn="addKeyword_focusInHandler(event)"
							 focusOut="addKeyword_focusOutHandler(event)"
							 keyUp="addKeyword_keyUpHandler(event)" includeIn="openEditable">
				<s:text>entrer nouveau mot-clé</s:text>
			</s:TextArea>
		</s:Group>
<!-- MEMO -->	
		<s:Group width="100%">
			<s:Label left="5" text="Memo : "/>
			<s:Group width="100%"  left="{LIFT_EDITABLED_COMPONENT}">
				<s:Rect id="fill" radiusX="5"
						left="2" right="2" top="1" bottom="1" minHeight="25">
					<s:fill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="0xFFFFFF" />
							<s:GradientEntry color="0xD8D8D8" />
						</s:LinearGradient>
					</s:fill>
				</s:Rect>
				<s:Rect id="border" radiusX="5"
						left="2" right="2" top="0" bottom="0">
					<s:stroke>
						<s:LinearGradientStroke rotation="90" weight="1">
							<s:GradientEntry color="0x000000" 
											 alpha="0.5625"/>
							<s:GradientEntry color="0x000000" 
											 alpha="0.75" />
						</s:LinearGradientStroke>
					</s:stroke>
				</s:Rect>
				<s:RichEditableText
					id="memoDisplay" 
						 top="8" bottom="7" maxHeight="40"
						 focusIn="memoDisplay_focusInHandler(event)"
						 focusOut="memoDisplay_focusOutHandler(event)" 
						 change="memoDisplay_changeHandler(event)" left="10" right="10" enabled.open="false">
					<s:text>This ic memo</s:text>
				</s:RichEditableText>
			</s:Group>
		</s:Group>
	</s:Group>
	<s:transitions>
		<s:Transition fromState="normal" toState="open">
			<s:Sequence>
				<s:Fade alphaTo="1" target="{content}" />
			</s:Sequence>
		</s:Transition>
	</s:transitions>
</s:Skin>