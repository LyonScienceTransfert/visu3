<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		creationComplete="skin1_creationCompleteHandler(event)" 
		xmlns:layout="sparks.layout.*">
	<fx:Script>
		<![CDATA[
			import gnu.as3.gettext.FxGettext;
			import gnu.as3.gettext._FxGettext;
			
			import mx.events.FlexEvent;
			
			import spark.events.TextOperationEvent;
			
			[Bindable]
			private var fxgt:_FxGettext;

			
			private static var LIFT_EDITABLED_COMPONENT:int = 75; 
			
			protected function skin1_creationCompleteHandler(event:FlexEvent):void
			{
				fxgt = FxGettext;

			}
			protected function group1_clickHandler(event:MouseEvent):void
			{
				if(event.target is Group)
				{
					this.hostComponent.titleDisplay_clickHandler(event);
				}
			}
// STATEMANT
			protected function addStatement_focusInHandler(event:FocusEvent):void
			{
				if(addStatement.text == "ajout une nouvelle consigne ici"){
					addStatement.text = "";
					addStatement.setStyle("fontStyle","normal");
					addStatement.setStyle("color","#000000");
				}
			}

			protected function addStatement_focusOutHandler(event:FocusEvent):void
			{
				if(addStatement.text == ""){
					this.setMessageStatement();
				}
			}
			
			protected function addStatement_keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.ENTER && addStatement.text != "")
				{
					this.validStatementButton_clickHandler(event);
				}
			}
			
			protected function validStatementButton_clickHandler(event:*):void
			{
				// add statement
				if(addStatement.text != "ajout une nouvelle consigne ici" && addStatement.text != "")
				{
					this.hostComponent.addStatement(addStatement.text);
					addStatement.text = "";
					stage.focus = addStatement;
				}
			}

			private function setMessageStatement():void
			{
				addStatement.text = "ajout une nouvelle consigne ici";
				addStatement.setStyle("fontStyle","italic");
				addStatement.setStyle("color","#BBBBBB");
			}
// MEMO

			protected function memoDisplay_focusInHandler(event:FocusEvent):void
			{
				if(memoDisplay.text == "entrer un nouveau memo ici")
				{
					memoDisplay.text = "";
					memoDisplay.setStyle("fontStyle","normal");
					memoDisplay.setStyle("color","#000000");
				}
			}


			protected function memoDisplay_focusOutHandler(event:FocusEvent):void
			{
				if(memoDisplay.text == ""){
					this.hostComponent.setMessageMemo();
				}else
				{
					// add memo
					this.hostComponent.addMemo(memoDisplay.text);
				}
			}

		]]>
	</fx:Script>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.view.session.controls.ActivityDetailEdit")]
	</fx:Metadata>

	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
	</s:states>
	
	<s:Group width="100%" height="30" click="group1_clickHandler(event)">				
		<!--<s:Rect top="0" left="0" bottom="0" right="0">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<s:GradientEntry color="#CCCCCC" />
					<s:GradientEntry color="#999999" />
				</s:LinearGradientStroke>
			</s:stroke>
			<s:fill>
				<s:LinearGradient rotation="90">					
					<s:GradientEntry color="#EFEFEF" />						
					<s:GradientEntry color="#CCCCCC" />						
				</s:LinearGradient>
			</s:fill>
		</s:Rect>-->
		<s:Path data="M 0 0 L 7 5 L 0 10 L 0 0 Z" 
				rotation.open="90"
				verticalCenter="0" left="3"
				>
			<s:postLayoutTransformOffsets>
				<s:TransformOffsets id="tOffsets" x.open="0" y.open="0"/>  
			</s:postLayoutTransformOffsets>
			<s:fill>
				<s:SolidColor color="#333333"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter angle="90"  distance="1" blurX="2" blurY="2" alpha=".7" inner="true" />
				<s:DropShadowFilter angle="180" distance="1" blurX="1" blurY="1" color="#FFFFFF" />
			</s:filters>
		</s:Path>
		
		<s:Label left="25" top="10">
			<!--<s:text>{fxgt.gettext("titre : ")}</s:text>-->
			<s:text>Titre : </s:text>
		</s:Label>
<!-- LABEL ACTIVITY-->
		<s:TextInput id="titleActivity" left="{LIFT_EDITABLED_COMPONENT}" top="5" right="80" color="#121212"
				 fontSize="14" fontWeight="bold" maxHeight="22" maxChars="80" top.open="5" left.open="{LIFT_EDITABLED_COMPONENT}" right.open="100">
			<!--<s:filters>
				<mx:DropShadowFilter distance="1" angle="90" blurX="3" blurY="3" alpha=".5" />
			</s:filters>-->
		</s:TextInput>
<!-- DURATION -->
		<s:Label id="durationDisplay" right="3" top="10" text="duration : 25"/>
	</s:Group>
	
	<s:Group top="30" left="5" right="5" bottom="10" includeIn="open" id="content">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
<!-- STATEMENTS -->
		<s:Group width="100%">
			<s:Label paddingLeft="5" text="Consignes : "/>
			<s:Group id="statementGroup" left="{LIFT_EDITABLED_COMPONENT}" width="100%">
				<s:layout>
					<s:VerticalLayout />
				</s:layout>
			</s:Group>
		</s:Group>
<!-- ADD STATEMENT -->
		<s:Group  width="100%">
			<s:TextArea  id="addStatement" maxHeight="25" right="15" fontStyle="italic" color="#BBBBBB"
						left="{LIFT_EDITABLED_COMPONENT+5}" verticalScrollPolicy="auto" textAlign="justify" 
						focusIn="addStatement_focusInHandler(event)"
						keyUp="addStatement_keyUpHandler(event)" 
						focusOut="addStatement_focusOutHandler(event)">
				<s:text>ajout une nouvelle consigne ici</s:text>
			</s:TextArea>	
			<s:Button right="15" top="27" bottom="2" click="validStatementButton_clickHandler(event)">
				<s:label>Valider</s:label>
			</s:Button>
		</s:Group>
<!-- DOCUMENTS -->		
		<s:Group width="100%">
			<s:Label left="5" text="Documents : "/>
			<s:Group id="documentGroup" left="{LIFT_EDITABLED_COMPONENT}" width="100%">
				<s:layout>
					<s:TileLayout requestedColumnCount="2" horizontalGap="50"/>
				</s:layout>
			</s:Group>	
		</s:Group>
<!-- MEMO -->	
		<s:Group width="100%">
			<s:Label left="5" text="Memo : "/>
			<s:Group width="100%"  left="{LIFT_EDITABLED_COMPONENT}">
				<s:Rect id="fill" radiusX="5"
						left="2" right="2" top="1" bottom="1" minHeight="25">
					<s:fill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="0xFFFFFF" />
							<s:GradientEntry color="0xD8D8D8" />
						</s:LinearGradient>
					</s:fill>
				</s:Rect>
				<s:Rect id="border" radiusX="5"
						left="2" right="2" top="0" bottom="0">
					<s:stroke>
						<s:LinearGradientStroke rotation="90" weight="1">
							<s:GradientEntry color="0x000000" 
											 alpha="0.5625"/>
							<s:GradientEntry color="0x000000" 
											 alpha="0.75" />
						</s:LinearGradientStroke>
					</s:stroke>
				</s:Rect>
				<s:RichEditableText
					id="memoDisplay" 
						 top="8" bottom="7" maxHeight="40"
						 focusIn="memoDisplay_focusInHandler(event)"
						 focusOut="memoDisplay_focusOutHandler(event)" left="10" right="10">
					<s:text>This </s:text>
				</s:RichEditableText>
			</s:Group>
		</s:Group>
	</s:Group>
	<s:transitions>
		<s:Transition fromState="normal" toState="open">
			<s:Sequence>
				<s:Fade alphaTo="1" target="{content}" />
			</s:Sequence>
		</s:Transition>
	</s:transitions>
</s:Skin>