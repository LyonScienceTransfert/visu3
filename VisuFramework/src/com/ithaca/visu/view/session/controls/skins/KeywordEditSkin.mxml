<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		  maxWidth="140" xmlns:components="com.ithaca.utils.components.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.view.session.controls.KeywordEdit")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.ithaca.visu.ui.utils.IconEnum;
			
            import gnu.as3.gettext.FxGettext;
            import gnu.as3.gettext._FxGettext;

			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			private var currentMouseCursor:String;

			[Bindable]
            private var fxgt: _FxGettext = FxGettext;

			// on click butoon cancel
			protected function onClickButtonCancel(event:MouseEvent):void
			{
				this.currentState = "normal";
			}
			
			// on click butoon cancel
			protected function onClickButtonValider(event:MouseEvent=null):void
			{
				this.currentState = "normal";
				if(this.textContent.text != this.editableContent.text){
					this.textContent.text = this.editableContent.text;
					this.textContent.toolTip = this.textContent.text;
					this.hostComponent.updateKeyword(this.textContent.text);
				}
			}
			
			protected function buttonDelete_clickHandler(event:MouseEvent):void
			{
				Alert.yesLabel = fxgt.gettext("Oui");
				Alert.noLabel = fxgt.gettext("Non");
				Alert.show(fxgt.gettext("Voulez-vous supprimer le mot-clÃ©?"),
					       fxgt.gettext("Confirmation"), Alert.YES|Alert.NO, null, deleteKeywordConfirmed);
				
			}
			private function deleteKeywordConfirmed(event:CloseEvent):void{
				if( event.detail == Alert.YES)
				{
					this.hostComponent.deleteKeyword();
				}
			}

			protected function editableContent_focusInHandler(event:FocusEvent):void
			{
				editableContent.addEventListener(FocusEvent.FOCUS_OUT, editableContent_focusOutHandler);
			}
			
			protected function editableContent_focusOutHandler(event:FocusEvent):void
			{
				editableContent.removeEventListener(FocusEvent.FOCUS_OUT, editableContent_focusOutHandler);
				if (!event.isRelatedObjectInaccessible){
					this.onClickButtonValider();
				}else 
					if ((event.relatedObject as Object).id != "buttonCancel")
					{
						this.onClickButtonValider();
					}	
			}

			protected function buttonEdit_clickHandler(event:MouseEvent):void
			{
				this.currentState = "open";
				this.editableContent.text = this.textContent.text;
				stage.focus = this.editableContent;
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="close"/>
		<s:State name="open" />
	</s:states>
	
	<s:Group width="100%">
		<s:layout>
			<s:VerticalLayout gap="4"/>
		</s:layout>
		<s:Group width="100%" height="22">
			<s:Rect id="fill" radiusX="10"
					left="2" right="2" top="1" bottom="1">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="0xFFFFFF" />
						<s:GradientEntry color="0xD8D8D8" />
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Rect id="border" radiusX="10"
					left="2" right="2" top="0" bottom="0">
				<s:stroke>
					<s:LinearGradientStroke rotation="90" weight="1">
						<s:GradientEntry color="0x000000" 
										 alpha="0.5625"/>
						<s:GradientEntry color="0x000000" 
										 alpha="0.75" />
					</s:LinearGradientStroke>
				</s:stroke>
			</s:Rect>
<!-- TEXT -->   		
			<s:Label includeIn="normal,close"  id="textContent" text="." 
					 maxDisplayedLines="1"
					 top="1" left.close="10" left="42" right="10"
								   paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" bottom="2"/>
			<s:HGroup width="100%" includeIn="open" gap="2" x="12" verticalAlign="middle">
				<s:TextInput id="editableContent" text="..."
							focusIn="editableContent_focusInHandler(event)"
					        width="88"/>
				<mx:Image width="16" height="16" source="{IconEnum.getIconByName('iconValider_16x16')}" click="onClickButtonValider(event)">
					<mx:buttonMode>true</mx:buttonMode>
	                <mx:toolTip>{fxgt.gettext("Valider")}</mx:toolTip>
				</mx:Image>
				<mx:Image width="16" height="16" source="{IconEnum.getIconByName('iconAnnuler_16x16')}" click="onClickButtonCancel(event)">
					<mx:buttonMode>true</mx:buttonMode>
                    <mx:toolTip>{fxgt.gettext("Annuler")}</mx:toolTip>
				</mx:Image>
				<mx:Spacer width="4"/>
			</s:HGroup>
<!-- BOUTTONS -->
			<mx:Image  includeIn="normal" id="buttonDelete" source="{IconEnum.getIconByName('delete')}"  width="16" height="16" left="10" top="3"
					    click="buttonDelete_clickHandler(event)"/>
			<mx:Image  includeIn="normal" id="buttonEdit" source="{IconEnum.getIconByName('iconEdit_16x16')}"  
					    click="buttonEdit_clickHandler(event)" height="16" width="16" left="26" top="3"
				        />
		</s:Group>
		
	</s:Group>
</s:Skin>
