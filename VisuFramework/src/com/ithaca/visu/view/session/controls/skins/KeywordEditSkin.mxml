<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="skin1_creationCompleteHandler(event)"
		  maxWidth="140">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.view.session.controls.KeywordEdit")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.ithaca.visu.ui.utils.IconEnum;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			private var currentMouseCursor:String;
			
			// on click butoon cancel
			protected function onClickButtonCancel(event:MouseEvent):void
			{
				this.currentState = "normal";
			}
			
			// on click butoon cancel
			protected function onClickButtonValider(event:MouseEvent=null):void
			{
				this.currentState = "normal";
				if(this.textContent.text != this.editableContent.text){
					this.textContent.text = this.editableContent.text;
					this.textContent.toolTip = this.textContent.text;
					this.hostComponent.updateKeyword(this.textContent.text);
				}
			}

			protected function skin1_creationCompleteHandler(event:FlexEvent):void
			{
				this.currentState="normal";
				
				this.textContent.text = this.hostComponent.textKeyword;
				
				
				buttonEdit.addEventListener(MouseEvent.CLICK, onClickEditButton);
				// set current mouse cursor
				currentMouseCursor = Mouse.cursor;
				// set listeners mouse over
				this.buttonDelete.addEventListener(MouseEvent.MOUSE_OVER, onMouseOverButton);
				this.buttonEdit.addEventListener(MouseEvent.MOUSE_OVER, onMouseOverButton);
				// set listeners mouse out
				this.buttonDelete.addEventListener(MouseEvent.MOUSE_OUT, onMouseOutButton);
				this.buttonEdit.addEventListener(MouseEvent.MOUSE_OUT, onMouseOutButton);
				// set tools tips
				this.buttonDelete.toolTip = "effacer";
				this.buttonEdit.toolTip = "editer";
				this.textContent.toolTip = this.textContent.text;
			}
			
			// set cursor mouse BUTTON 
			protected function onMouseOverButton(event:MouseEvent):void
			{
				var image:Image = event.target as Image;
				Mouse.cursor = MouseCursor.BUTTON;		
			}
			
			// set cursor mouse AROOW  
			protected function onMouseOutButton(event:MouseEvent):void
			{
				Mouse.cursor = this.currentMouseCursor;
			}
			
			//
			protected function onClickEditButton(event:MouseEvent):void
			{
				this.currentState = "open";
				this.editableContent.text = this.textContent.text;
				stage.focus = this.editableContent;
			}

			protected function buttonDelete_clickHandler(event:MouseEvent):void
			{
				Alert.yesLabel = "Oui";
				Alert.noLabel = "Non";
				Alert.show("Voulez-vous supprimer mot-clÃ©?",
					"Confirmation", Alert.YES|Alert.NO, null, deleteKeywordConfirmed); 
				
			}
			private function deleteKeywordConfirmed(event:CloseEvent):void{
				if( event.detail == Alert.YES)
				{
					this.hostComponent.deleteKeyword();
				}
			}

			protected function editableContent_focusInHandler(event:FocusEvent):void
			{
				editableContent.addEventListener(FocusEvent.FOCUS_OUT, editableContent_focusOutHandler);
			}
			
			protected function editableContent_focusOutHandler(event:FocusEvent):void
			{
				editableContent.removeEventListener(FocusEvent.FOCUS_OUT, editableContent_focusOutHandler);
				if (!event.isRelatedObjectInaccessible){
					this.onClickButtonValider();
				}else 
					if ((event.relatedObject as Object).id != "buttonCancel")
					{
						this.onClickButtonValider();
					}	
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="closed"/>
		<s:State name="open" />
	</s:states>
	
	<s:Group width="100%">
		<s:layout>
			<s:VerticalLayout gap="4"/>
		</s:layout>
		<s:Group width="100%" height="22">
			<s:Rect id="fill" radiusX="10"
					left="2" right="2" top="1" bottom="1">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="0xFFFFFF" />
						<s:GradientEntry color="0xD8D8D8" />
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Rect id="border" radiusX="10"
					left="2" right="2" top="0" bottom="0">
				<s:stroke>
					<s:LinearGradientStroke rotation="90" weight="1">
						<s:GradientEntry color="0x000000" 
										 alpha="0.5625"/>
						<s:GradientEntry color="0x000000" 
										 alpha="0.75" />
					</s:LinearGradientStroke>
				</s:stroke>
			</s:Rect>
<!-- TEXT -->   		
			<s:Label includeIn="normal,closed"  id="textContent" text="ghgkkkhhkhkhkhkjhkjhkhgjgjgj  jgjg jj j gjgjhg jgjgjghjgj   j jg j jkhkGgh" top="1" left.closed="10" left="42" right="10"
								   paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" bottom="2"/>
			<s:TextArea id="editableContent"  includeIn="open" text="jkhgljhglgkjghkjgkjhgkljf" top="1" left="10" right="10" bottom="1"
						paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
						focusIn="editableContent_focusInHandler(event)"/>
<!-- BOUTTONS -->
			<mx:Image  includeIn="normal" id="buttonDelete" source="{IconEnum.getIconByName('delete')}"  width="16" left="10" top="3"
					    click="buttonDelete_clickHandler(event)"/>
			<mx:Image  includeIn="normal" id="buttonEdit" source="{IconEnum.getIconByName('edit')}"  height="14" width="14" left="26" top="5"/>
		</s:Group>
		<s:HGroup width="100%" includeIn="open" horizontalAlign="right" paddingRight="3">
			<s:Button includeIn="open" click="onClickButtonValider(event)">
				<s:label>Valider</s:label>
			</s:Button>
			<s:Button id="buttonCancel" click="onClickButtonCancel(event)">
				<s:label>Cancel</s:label>
			</s:Button>
		</s:HGroup>
	</s:Group>
</s:Skin>
