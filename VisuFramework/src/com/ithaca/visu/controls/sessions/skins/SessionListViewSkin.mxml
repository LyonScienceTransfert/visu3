<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.controls.sessions.SessionListView")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.ithaca.utils.UtilFunction;
			import com.ithaca.utils.VisuUtils;
			import com.ithaca.visu.model.Model;
			import com.ithaca.visu.model.Session;
			
			private function labelFunctionDateSession(item:Object, column:Object):String
			{
				var result:String = UtilFunction.getDateMountHourMin(item.date_session);
				return result;
			}
			private function labelFunctionOwnerSession(item:Object, column:Object):String
			{
				var result:String = VisuUtils.getUserLabel(Model.getInstance().getUserPlateformeByUserId(item.id_user),true);
				return result;
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="plan" />
		<s:State name="session" />
	</s:states>
	<!-- SkinParts
	name=filterText, type=spark.components.TextInput, required=false
	name=newSessionButton, type=spark.components.Button, required=false
	name=newPlanButton, type=spark.components.Button, required=false
	name=sharingMineButton, type=spark.components.RadioButton, required=false
	name=planList, type=spark.components.List, required=false
	name=comingButton, type=spark.components.RadioButton, required=false
	name=allButton, type=spark.components.RadioButton, required=false
	name=sessionList, type=spark.components.List, required=false
	name=sharingAllButton, type=spark.components.RadioButton, required=false
	name=sharingOtherButton, type=spark.components.RadioButton, required=false
	name=pastButton, type=spark.components.RadioButton, required=false
	-->
	<s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="left" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5">
		<s:Group width="100%">
			<s:Rect id="filterAreaBorder" width="100%" height="100%" radiusX="5">
				<s:stroke >
					<s:LinearGradientStroke rotation="90" weight="1">
						<s:GradientEntry color="0x000000" alpha="0.5625" />
						<s:GradientEntry color="0x000000" alpha="0.75" />
					</s:LinearGradientStroke>
				</s:stroke>
				<s:fill>
					<s:SolidColor id="solidColorFilter" color="0x000000"/>
				</s:fill>
			</s:Rect>
			<s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="left" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5">
				<s:Label  id="filterLabel" text="Filtre:"/>
				<s:VGroup id="filterSessionButtonsGroup" width="100%" verticalAlign="middle" includeIn="session">
					<s:RadioButton groupName="timeFilter" 
								   id="allButton"
								   label="Toutes les scéances" 
								   selected="true"
								   />
					<s:RadioButton groupName="timeFilter" 
								   id="pastButton"
								   label="Séances passées" 
								   />
					<s:RadioButton groupName="timeFilter" 
								   id="comingButton"
								   label="Séances à venir" 
								   />
				</s:VGroup>
				<s:VGroup id="filterPlanButtonsGroup" width="100%" verticalAlign="middle" includeIn="plan">
					<s:RadioButton groupName="sharingFilter" 
								   id="sharingAllButton"
								   label="Tous les plans de séance" 
								   selected="true"
								   />
					<s:RadioButton groupName="sharingFilter" 
								   id="sharingMineButton"
								   label="Mes plans de séance (créés par moi)"
								   toolTip="Affiche uniquement les plans de séance que j'ai créés"/>
					<s:RadioButton groupName="sharingFilter" 
								   id="sharingOtherButton"
								   label="Autres plans de séance partagés (créés par d'autres)" 
								   toolTip="Affiche uniquement les plans de séance créés et partagés par d'autres utilisateurs"/>	
				</s:VGroup>	
				<s:HGroup id="filterGroup" width="100%" verticalAlign="middle">
					<s:Label  text="Contient le Texte:"/>
					<s:TextInput width="100%" text="" id="filterText"/>
					<s:Group id="clearIcon" right="3" verticalCenter="-1" visible="{filterText.text.length>0}" includeInLayout="{filterText.text.length>0}">
						<s:Path 
							winding="{GraphicsPathWinding.EVEN_ODD}"
							data="M 4 5 L 5 4 L 8 7 L 11 4 L 12 5 L 9 8 L 12 11 L 11 12 L 8 9 L 5 12 L 4 11 L 7 8 L 4 5 Z M 1 8 C 1 12 4 15 8 15 C 12 15 15 12 15 8 C 15 4 12 1 8 1 C 4 1 1 4 1 8 Z " 
							blendMode="normal" 
							alpha="0.7">
							<s:fill>
								<s:LinearGradient x = "7" y = "0" scaleX = "14" rotation = "90">
									<s:GradientEntry color="#666666" ratio="0" alpha="1"/>
									<s:GradientEntry color="#999999" ratio="1" alpha="1"/>
								</s:LinearGradient>
							</s:fill>
							<s:filters>
								<s:DropShadowFilter angle="90" color="#000000" distance="1" alpha="0.65" quality="0" inner="true"/>
								<s:DropShadowFilter angle="90" color="#ffffff" distance="1" alpha="0.7" quality="0"/>
							</s:filters>
						</s:Path>
					</s:Group>
				</s:HGroup>
			</s:VGroup>
		</s:Group>
		
		<s:Group width="100%" height="100%">
			<s:VGroup width="100%" height="100%" verticalAlign="top" horizontalAlign="left" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" x.session="0">
				<s:HGroup verticalAlign="bottom" width="100%" horizontalAlign="center">
					<s:Group id="newPlanSessionButtonsGroup">
						<s:Button id="newPlanButton" label="Nouveau plan" toolTip="Crée un nouveau plan de séance vide" includeIn="plan"/>
						<s:Button id="newSessionButton" label="Nouvelle séance" toolTip="Crée une nouvelle séance avec un plan de séance vide" includeIn="session" x="0"/>
					</s:Group>
				</s:HGroup>
				<mx:DataGrid id="planDataGrid" width="100%" height="100%" includeIn="plan">
					<mx:columns>
						<mx:DataGridColumn dataField="theme" showDataTips="true" dataTipField="theme">
							<mx:headerText>Thème de séance</mx:headerText>			
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="id_user" labelFunction="labelFunctionOwnerSession" width="100">
							<mx:headerText>Propriétaire de séance</mx:headerText>			
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
				<s:List id="planList" width="100%" height="100%"  excludeFrom="plan,session">
					<s:itemRenderer>
						<fx:Component>
							<s:ItemRenderer width="100%">
								<fx:Script>
									<![CDATA[
										import com.ithaca.utils.VisuUtils;
										import com.ithaca.visu.model.Model;
									]]>
								</fx:Script>
								<s:HGroup paddingTop="5" paddingBottom="5" paddingRight="5" paddingLeft="5"  left="0" right="0" verticalAlign="middle" height="20">
									<s:Label width="50%" maxDisplayedLines="1" text="{data.theme}" toolTip="{data.theme}"/>
									<mx:Spacer width="2%"/>
									<s:HGroup width="48%" right="1">
										<!-- move Model from here -->
										<s:Label  width="55%" maxDisplayedLines="1" text="{VisuUtils.getUserLabel(Model.getInstance().getUserPlateformeByUserId(data.id_user),true)}" toolTip="{VisuUtils.getUserLabel(Model.getInstance().getUserPlateformeByUserId(data.id_user),true)}"/>
										<s:Label  width="45%" visible="{data.share}" text="(partagé)" right="1"/>
									</s:HGroup>
								</s:HGroup>
							</s:ItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:List>
				<mx:DataGrid id="sessionDataGrid" width="100%" height="100%" includeIn="session">
					<mx:columns>
						<mx:DataGridColumn id="dateSessionDataGrid" dataField="date_session" labelFunction="labelFunctionDateSession" width="80">
							<mx:headerText>Date prévue</mx:headerText>			
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="theme">
							<mx:headerText>Thème de séance</mx:headerText>			
						</mx:DataGridColumn>
						<mx:DataGridColumn dataField="id_user" labelFunction="labelFunctionOwnerSession" width="80">
							<mx:headerText>Propriétaire de séance</mx:headerText>			
						</mx:DataGridColumn>
					</mx:columns>
				</mx:DataGrid>
				<s:List id="sessionList" width="100%" height="100%" excludeFrom="plan,session">
					<s:itemRenderer>
						<fx:Component>
							<s:ItemRenderer width="100%">
								<fx:Script>
									<![CDATA[
										import com.ithaca.utils.UtilFunction;
										import com.ithaca.utils.VisuUtils;
										import com.ithaca.visu.model.Model;
									]]>
								</fx:Script>
								<s:HGroup  paddingTop="5" paddingBottom="5" paddingRight="5" paddingLeft="5" left="0" right="0" verticalAlign="middle" height="20">
									<s:Label width="23%" text="{UtilFunction.getDateMountHourMin(data.date_session)}" maxDisplayedLines="1"/>
									<mx:Spacer width="2%"/>
									<s:HGroup  width="75%">
										<s:Label  width="65%" text="{data.theme}" toolTip="{data.theme}" maxDisplayedLines="1"/>
										<s:Label width="35%" text="{VisuUtils.getUserLabel(Model.getInstance().getUserPlateformeByUserId(data.id_user),true)}" toolTip="{VisuUtils.getUserLabel(Model.getInstance().getUserPlateformeByUserId(data.id_user),true)}" maxDisplayedLines="1"/>
									</s:HGroup>
								</s:HGroup>
							</s:ItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:List>
			</s:VGroup>		
		</s:Group>
	</s:VGroup>
</s:Skin>
