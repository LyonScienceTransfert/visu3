<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
        creationComplete="skin1_creationCompleteHandler(event)"
        addedToStage="skin1_addedToStageHandler(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.visu.controls.sessions.SessionBilanFormView")]
	</fx:Metadata>
    <fx:Script>
    <![CDATA[
        import com.ithaca.documentarisation.model.RetroDocument;
        import com.ithaca.visu.model.Model;
        import com.ithaca.visu.model.User;
        import com.ithaca.visu.renderer.ActionBilanRenderer;
        import com.ithaca.visu.renderer.DateBilanRenderer;
        import com.ithaca.visu.renderer.DateBilanRendererInLine;
        import com.ithaca.visu.renderer.TitreBilanRenderer;
        
        import gnu.as3.gettext.FxGettext;
        import gnu.as3.gettext._FxGettext;
        
        import mx.events.FlexEvent;
        import mx.utils.ObjectUtil;
        
        [Bindable]
        private var fxgt: _FxGettext = FxGettext;

        protected function skin1_creationCompleteHandler(event:FlexEvent):void
        {
            fxgt = FxGettext;
        }


        protected function skin1_addedToStageHandler(event:Event):void
        {
            dataGridDateModification.width = 80;
            dataGridDateModification.minWidth = 80;
            
            dataGridTitreBilan.width = 280;
            
            dataGridInfos.width = 100;
            dataGridInfos.minWidth = 100;
            
            dataGridOwnerBilan.width = 120;
            
            dataGridPartage.width = 55;
            dataGridPartage.minWidth = 55;
            
            
            dataGridActionBilan.width = 62;
            dataGridActionBilan.minWidth = 62;
            
            this.invalidateProperties();
            this.invalidateDisplayList();
        }

        /**
         * Sort by shared the bilan
         */
        private function sortFunctionShare(itemA:Object, itemB:Object):int
        {
            var valueA:Boolean = (itemA as RetroDocument).isShared();
            var valueB:Boolean = (itemB as RetroDocument).isShared();
            return ObjectUtil.compare(valueA, valueB);
        }
        /**
         * Sort by name owner the bilan
         */
        private function sortFunctionOwnerBilanName(itemA:Object, itemB:Object):int
        {
            var valueA:String = (Model.getInstance().getUserPlateformeByUserId(itemA.ownerId) as User).lastname;
            var valueB:String = (Model.getInstance().getUserPlateformeByUserId(itemB.ownerId) as User).lastname
            return ObjectUtil.stringCompare(valueA, valueB, true);
        }
    ]]>
    </fx:Script>
    <s:VGroup width="100%" gap="12" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" verticalAlign="middle" height="100%">
        <s:HGroup width="100%" gap="20">
            <s:HGroup width="110" horizontalAlign="right">
                <s:Label width="100%" textAlign="right">
                    <s:text>{fxgt.gettext("Participants:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%">
    			<s:Label id="labelListRecordedUser" width="100%" text="Tom Smith (tuteur), John Black (étudiant), Jane White (étudiant)" textAlign="left"/>
            </s:HGroup>
        </s:HGroup>
        <s:HGroup width="100%" gap="20" verticalAlign="middle">
            <s:HGroup width="110" >
                <s:Label width="100%" textAlign="right">
                    <s:text>{fxgt.gettext("Manquants:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%">
    			<s:Label  id="labelListAbsentUser" width="100%" text="Bill Jones (étudiant)" textAlign="left"/>
            </s:HGroup>
        </s:HGroup>
        <s:HGroup width="100%" gap="20" verticalAlign="middle">
            <s:HGroup width="110" >
                <s:Label width="100%" textAlign="right">
                    <s:text>{fxgt.gettext("Date de début:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%">
    			<s:Label  id="labelDateDebut" width="100%" text="25 Fév. 2011, à 15:03" textAlign="left"/>
            </s:HGroup>
        </s:HGroup>
        <s:HGroup width="100%" gap="20" verticalAlign="middle">
            <s:HGroup width="110" >
                <s:Label width="100%" textAlign="right" >
                    <s:text>{fxgt.gettext("Durée:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%">
    			<s:Label id="labelDuration" width="100%" text="1 h 27" textAlign="left"/>
            </s:HGroup>
        </s:HGroup>
        <s:HGroup width="100%" gap="20" verticalAlign="middle">
            <s:HGroup width="110" >
                <s:Label width="100%" textAlign="right" verticalAlign="middle">
                    <s:text>{fxgt.gettext("Actions:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%">
    			<mx:LinkButton id="linkButtonGoSalonRetrospection" color="#0000FF" fontWeight="bold" toolTip="Rejoindre le salon de rétrospection pour cette séance" label="Aller vers rétrospection" textAlign="left"/>
            </s:HGroup>
        </s:HGroup>
        <s:HGroup width="100%" gap="20" height="100%">
            <s:HGroup width="110" >
                <s:Label width="100%" textAlign="right">
                    <s:text>{fxgt.gettext("Bilans existants:")}</s:text>
                </s:Label>
            </s:HGroup>
            <s:HGroup width="100%" height="100%">
    			<s:VGroup width="100%" gap="12" height="100%">
                    <s:Label id="labelBilan" width="100%" text="(Liste interactive des bilans, à maquetter avec le composant 'Liste des bilans')" textAlign="left"/>
                    <mx:DataGrid id="dataGridBilan" width="100%" height="100%">
                        <mx:columns>
                            <mx:DataGridColumn id="dataGridDateModification"  dataField="modifyDateAsDate" itemRenderer="com.ithaca.visu.renderer.DateBilanRendererInLine">
                                <mx:headerText>{fxgt.gettext("Date de modification")}</mx:headerText>
                            </mx:DataGridColumn>
                            <mx:DataGridColumn id="dataGridTitreBilan" dataField="title" itemRenderer="com.ithaca.visu.renderer.TitreBilanRenderer" >
                                <mx:headerText>{fxgt.gettext("Titre bilan")}</mx:headerText>
                            </mx:DataGridColumn>
                            <mx:DataGridColumn  id="dataGridOwnerBilan" sortCompareFunction="{sortFunctionOwnerBilanName}" itemRenderer="com.ithaca.visu.renderer.OwnerBilanRenderer">
                                <mx:headerText>{fxgt.gettext("Propriétaire du bilan")}</mx:headerText>
                            </mx:DataGridColumn>
                            <mx:DataGridColumn  id="dataGridPartage"  itemRenderer="com.ithaca.visu.renderer.ShareBilanRenderer" sortCompareFunction="{sortFunctionShare}">
                                <mx:headerText>{fxgt.gettext("Partagé")}</mx:headerText>
                            </mx:DataGridColumn>
                            <mx:DataGridColumn  id="dataGridInfos"  itemRenderer="com.ithaca.visu.renderer.InfosBilanRendererInLine">
                                <mx:headerText>{fxgt.gettext("Infos")}</mx:headerText>
                            </mx:DataGridColumn>
                            <mx:DataGridColumn id="dataGridActionBilan" itemRenderer="com.ithaca.visu.renderer.ActionBilanRenderer">
                                <mx:headerText>{fxgt.gettext("Actions")}</mx:headerText>
                            </mx:DataGridColumn>
                        </mx:columns>
                    </mx:DataGrid>
                </s:VGroup>
            </s:HGroup>
        </s:HGroup>
    </s:VGroup>
</s:Skin>
