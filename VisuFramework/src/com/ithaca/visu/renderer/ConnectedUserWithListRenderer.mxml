<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" xmlns:controls="com.ithaca.visu.controls.*"
				creationComplete="itemrenderer1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.ithaca.visu.dataStrutures.UserSwapList;
			import com.ithaca.visu.events.SessionHomeElementEvent;
			import com.ithaca.visu.ui.utils.RoleEnum;
			import com.ithaca.visu.model.User;
			
			import mx.collections.IList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			import spark.components.DataGroup;
			import spark.events.DropDownEvent;
			import spark.events.IndexChangeEvent;
			
			private var doUpdate:Boolean = true;
			private var selectedUser:User = null;
			
			import gnu.as3.gettext.FxGettext;
			import gnu.as3.gettext._FxGettext;
			
			[Bindable]
			private var fxgt:_FxGettext;

			protected function list_changeHandler(event:IndexChangeEvent):void
			{
				var newUser:User = data.swapList.getItemAt( event.newIndex );
				var oldUser:User = data.swapList.getItemAt( event.oldIndex );
				doUpdate = true;
				selectedUser = null;
				// try find selected user in this session
				var arrUsersSwapList:IList = (parent as DataGroup).dataProvider;
				var nbrObject:uint = arrUsersSwapList.length;
				for(var nObject:uint = 0; nObject < nbrObject ; nObject++)
				{
					var userSwapList:UserSwapList = arrUsersSwapList.getItemAt(nObject) as UserSwapList;
					var userId:int = userSwapList.user.id_user;
					if(userId == newUser.id_user)
					{	
						// set old index in DropDownList
						(event.currentTarget as DropDownList).selectedIndex=event.oldIndex;
						doUpdate = false;
						selectedUser = newUser;
						break;
					}
				}
			 	if (doUpdate)
				{
				updateStyle( newUser );
				statusIcon.status = newUser.status;
				var sessionHomeElementEvent:SessionHomeElementEvent = new SessionHomeElementEvent(SessionHomeElementEvent.CHANGE_SESSION_USER);
				sessionHomeElementEvent.oldSessionUser = oldUser;
				sessionHomeElementEvent.newSessionUser = newUser;
				parent.dispatchEvent(sessionHomeElementEvent);
				}else{
					updateStyle( oldUser );
					list.addEventListener(DropDownEvent.CLOSE, onDropDropDownListClose);	
				}
				
			}

			protected function onDropDropDownListClose(event:DropDownEvent):void
			{
				list.removeEventListener(DropDownEvent.CLOSE, onDropDropDownListClose);
				//show message
				if(!doUpdate)Alert.show(fxgt.gettext("L'utilisateur ")+selectedUser.firstname+fxgt.gettext(" est déjè en liste de séances."),fxgt.gettext("Information"));
			}

			protected function list_creationCompleteHandler(event:FlexEvent):void
			{
				if(data != null){
					for each(var u:User in data.swapList)
					{
						if( data.user.mail == u.mail) 
						{
							list.selectedItem = u;						
							updateStyle( u );
							statusIcon.status = u.status;
							return;
						}
					}
				}
			}
			protected function updateStyle(user:User):void
			{
				if( user.role > RoleEnum.STUDENT )
					
					list.setStyle("fontWeight","bold")
				else
					list.setStyle("fontWeight","normal")						
			}

			protected function itemrenderer1_creationCompleteHandler(event:FlexEvent):void
			{
				fxgt = FxGettext;
			}

		]]>
	</fx:Script>	 
	<s:DropDownList 
		id="list"
		dataProvider="{data.swapList}"
		itemRenderer="com.ithaca.visu.renderer.ConnectedUserListRenderer"
		skinClass="com.ithaca.visu.skins.ConnectedUserDropDownSkin"
		cornerRadius="10"
		labelField="firstname"
		creationComplete="list_creationCompleteHandler(event)"
		change="list_changeHandler(event)"
		/>
	<controls:ConnectionLight
		id="statusIcon" 
		left="5" width="10" height="10" verticalCenter="-1"
		/>
</s:ItemRenderer>
