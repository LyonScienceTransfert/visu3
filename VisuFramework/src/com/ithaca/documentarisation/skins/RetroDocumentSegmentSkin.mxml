<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:documentarisation="com.ithaca.documentarisation.*"
		currentStateChange="skin1_currentStateChangeHandler(event)"
		creationComplete="skin1_creationCompleteHandler(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ithaca.documentarisation.RetroDocumentSegment")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.ithaca.visu.ui.utils.IconEnum;
			
			import gnu.as3.gettext.FxGettext;
			import gnu.as3.gettext._FxGettext;
			
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			
			[Bindable]
			private var fxgt:_FxGettext;
			
			protected function group1_clickHandler(event:MouseEvent):void
			{
				if(event.target is Group)
				{
					this.hostComponent.segment_clickHandler(event);
				}
			}

			protected function skin1_currentStateChangeHandler(event:StateChangeEvent):void
			{
				if(this.currentState == "open" || this.currentState == "openEditable"  )
				{
					this.hostComponent.checkingEmptySegmentVideo();
				}
				
				var commentDurationTooltips:Boolean = false;
				if(this.currentState == "normal" || this.currentState == "normalEditable")
				{
					commentDurationTooltips = true;
				}
				this.hostComponent.setCommentAndDurationToolTips(commentDurationTooltips);
			}


			protected function skin1_creationCompleteHandler(event:FlexEvent):void
			{
				fxgt = FxGettext;
			}

		]]>
	</fx:Script>
	<!-- SkinParts
	name=segmentVideo, type=com.ithaca.documentarisation.SegmentVideo, required=false
	name=titleSegmentLabel, type=spark.components.Label, required=false
	name=buttonDeleteSegment, type=mx.controls.Button, required=false
	name=segmentComment, type=spark.components.RichEditableText, required=false
	-->
	
	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="normalEditable"/>
		<s:State name="openEditable"/>
	</s:states>
<!--	
	<s:Rect id="background" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor id="bgFill" color="#ffffff"/>
		</s:fill>
	</s:Rect>
-->
	<s:Rect id="fill" radiusX="2"
			left="2" right="2" top="1" bottom="1">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" />
				<s:GradientEntry color="0xD8D8D8" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect id="border" radiusX="2"
			left="2" right="2" top="0" bottom="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0x000000" 
								 alpha="0.5625"/>
				<s:GradientEntry color="0x000000" 
								 alpha="0.75" />
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Rect>
	
	<s:Group width="100%" height="30" click="group1_clickHandler(event)">				
		<s:Path data="M 0 0 L 7 5 L 0 10 L 0 0 Z" 
				rotation.open="90"
				verticalCenter="0" left="6"
				rotation.openEditable="90">
			<s:postLayoutTransformOffsets>
				<s:TransformOffsets id="tOffsets" x.open="0" y.open="0" x.openEditable="0" y.openEditable="0"/>  
			</s:postLayoutTransformOffsets>
			<s:fill>
				<s:SolidColor color="#333333"/>
			</s:fill>
			<s:filters>
				<s:DropShadowFilter angle="90"  distance="1" blurX="2" blurY="2" alpha=".7" inner="true" />
				<s:DropShadowFilter angle="180" distance="1" blurX="1" blurY="1" color="#FFFFFF" />
			</s:filters>
		</s:Path>
		
<!-- LABEL SEGMENT-->
		<s:TextInput id="titleSegmentTextInput" left="20" top="5" right="220" color="#121212"
					 fontSize="12" maxHeight="22"
					 includeIn="normalEditable,openEditable" top.openEditable="5" top.normalEditable="5" left.normalEditable="20" right.normalEditable="170" left.openEditable="20" right.openEditable="170">
		</s:TextInput>
		<s:Label id="titleSegmentLabel" left="20" right="5" maxDisplayedLines="1" includeIn="normal,open" verticalCenter="0" left.normal="20" right.normal="140" verticalCenter.normal="0" left.open="20" right.open="140" verticalCenter.open="0"/>
<!-- LABEL START/DURATION -->
		<s:Label id="labelStartDuration" right="80" right.normal="65" right.normalEditable="95" right.openEditable="95" right.open="65" verticalCenter="2" verticalCenter.open="2" verticalCenter.normal="2" verticalCenter.normalEditable="2" verticalCenter.openEditable="2">
			<s:text>05:20 (135 s)</s:text>
		</s:Label>
<!-- DELETE SEGMENT -->
		<mx:Button  id="buttonDeleteSegment" top="5" right="48" 
					icon="{IconEnum.getIconByName('delete')}"
					includeIn="normalEditable,openEditable" width="30" top.normalEditable="5" right.normalEditable="63" top.openEditable="5" right.openEditable="63">
		</mx:Button>
	</s:Group>
<!-- PLAY/STOP VIDEO -->
		<mx:Button id="buttonPlayStopVideo" top="5" right="5" width="40" label.open="{fxgt.gettext(&quot;Play&quot;)}" width.open="55" width.normal="55" width.normalEditable="55" width.openEditable="55">
			<mx:label>{fxgt.gettext("Play")}</mx:label>
		</mx:Button>
	
	<s:Group top="30" bottom="5" includeIn="open,openEditable" id="content" left="5"  right="5" >
		<documentarisation:SegmentVideo  id="segmentVideo" left="3" right="3" height="32"/>
		<s:TextArea  id="segmentComment" top="35" left="3" right="3"  bottom="5" text="----" enabled.open="true"
					  maxHeight="65" editable.open="false"/>
	</s:Group>
	<s:transitions>
		<s:Transition fromState="normal" toState="open">
			<s:Sequence>
				<s:Fade alphaTo="1" target="{content}" />
			</s:Sequence>
		</s:Transition>
	</s:transitions>
</s:Skin>
