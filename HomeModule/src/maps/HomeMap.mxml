<?xml version="1.0"?>
<mate:LocalEventMap
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/halo"
        xmlns:mate="http://mate.asfusion.com/"
		xmlns:rtmp="com.flashdevs.mateExt.rtmpService.mate.*">

    <fx:Script><![CDATA[
		import business.HomeManager;
		
		import com.asfusion.mate.utils.debug.Debugger;
		import com.flashdevs.mateExt.rtmpService.RtmpService;
		import com.ithaca.visu.events.InitMapEvent;
		import com.ithaca.visu.events.SessionEvent;
		import com.ithaca.visu.events.UserEvent;
		import com.ithaca.visu.model.Model;
		import com.ithaca.visu.view.session.controls.event.SessionEditEvent;
		
		import modules.HomeModule;
		
		import mx.events.FlexEvent;
		
        ]]></fx:Script>

    <fx:Declarations>
        <mate:Debugger level="{Debugger.ALL}"/>

        <mate:Injectors target="{HomeModule}">
			<mate:PropertyInjector source="{HomeManager}"
								   targetKey="listSessionView" sourceKey="listSessionView"/>
			<mate:PropertyInjector source="{HomeManager}"
								   targetKey="fluxActivity" sourceKey="fluxActivity"/>
        </mate:Injectors>
		
		<!-- FlexEvent.PREINITIALIZE __________________________________________________________________ -->		
		<mate:EventHandlers type="{InitMapEvent.INIT_MAP_HOME}" debug="true">
			<mate:ObjectBuilder generator="{HomeManager}" constructorArguments="{scope.dispatcher}"/>
			<mate:MethodInvoker generator="{HomeManager}" 
								method="getFluxActivity" />
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="testApp"   arguments="{['Home']}"/>
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<s:RemoteObject
			id="remoteUser"
			endpoint="{Model.getInstance().AMFServer}"
			destination="UserService"
			makeObjectsBindable="true"
			showBusyCursor="true">
		</s:RemoteObject>						
		
		<s:RemoteObject
			id="remoteSession"
			endpoint="{Model.getInstance().AMFServer}"
			destination="SessionService"
			makeObjectsBindable="true"
			showBusyCursor="true">
		</s:RemoteObject>

<!-- 1) first call -->		
		<mate:EventHandlers type="{SessionEvent.LOAD_LIST_DATE_SESSION}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" debug="true" cache="global">
				<mate:Request action="sessionInfo.getSessionsDatesByUser"   arguments="{[event.userId]}" />
			</rtmp:RtmpServiceInvoker>	
		</mate:EventHandlers>
		
<!-- 2) second call -->
		<mate:EventHandlers type="{SessionEvent.LOAD_LIST_SESSION}">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" debug="true" cache="global">
				<mate:Request action="sessionInfo.getSessionsByDateByUser"   arguments="{[event.userId,event.sessionDate]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>		
			
<!-- 3) third call -->
		<mate:EventHandlers type="{UserEvent.LOAD_LIST_USERS_SESSION}" debug="true">
			<mate:RemoteObjectInvoker  instance="{remoteUser}" method="getUsersFromSession" arguments="{event.sessionId}">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{HomeManager}"
										method="onLoadListUsersSession" arguments="{[resultObject, event.sessionId, event.sessionDate]}"/>
				</mate:resultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>

<!-- USERS -->
		<mate:EventHandlers type="{FlexEvent.CREATION_COMPLETE}" debug="true">
			<mate:RemoteObjectInvoker  instance="{remoteUser}" method="listUsers">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{HomeManager}" method="onLoadListUsers" arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{HomeManager}"
										method="onError" arguments="{[currentEvent]}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{UserEvent.UPDATE_USER}" useCapture="true"  debug="true">
			<mate:RemoteObjectInvoker  instance="{remoteUser}" method="updateUser" arguments="{event.userVO}">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{HomeManager}" method="onUpdateUser" arguments="{[resultObject]}"/>
				</mate:resultHandlers>
				<mate:faultHandlers>
					<mate:MethodInvoker generator="{HomeManager}"
										method="onError" arguments="{[currentEvent]}"/>
				</mate:faultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
    </fx:Declarations>

</mate:LocalEventMap>