<?xml version="1.0"?>
<mate:LocalEventMap 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/halo"
	xmlns:mate="http://mate.asfusion.com/"
	xmlns:rtmp="com.flashdevs.mateExt.rtmpService.mate.*">
	
	<fx:Script><![CDATA[
		import business.RetrospectionManager;
		
		import com.asfusion.mate.utils.debug.Debugger;
		import com.flashdevs.mateExt.rtmpService.RtmpService;
		import com.ithaca.traces.model.TraceModel;
		import com.ithaca.visu.events.InitMapEvent;
		import com.ithaca.visu.events.SalonRetroEvent;
		import com.ithaca.visu.events.SessionEvent;
		import com.ithaca.visu.events.TraceLineEvent;
		import com.ithaca.visu.events.VisuModuleEvent;
		
		import mx.events.FlexEvent;
		
	]]></fx:Script>
	
	<fx:Declarations>
		<mate:Debugger level="{Debugger.ALL}"/>
		
		<!-- FlexEvent.PREINITIALIZE __________________________________________________________________ -->
		<mate:EventHandlers type="{FlexEvent.PREINITIALIZE}">
			<mate:ObjectBuilder generator="{RetrospectionManager}" constructorArguments="{scope.dispatcher}"/>
		</mate:EventHandlers>	
		<!-- FlexEvent.CREATIONCOMPLET -->
		<mate:EventHandlers type="{FlexEvent.CREATION_COMPLETE}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="sessionInfo.getSessionsByUser"   arguments="{[]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>	
		<!-- InitMapEvent.INIT_MAP_TUTORAT __________________________________________________________________ -->		
		<mate:EventHandlers type="{InitMapEvent.INIT_MAP_RETROSPECTION}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="testApp"   arguments="{['Retrospection']}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>	
		
		<mate:EventHandlers type="{SessionEvent.GET_LIST_CLOSED_SESSION}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="sessionInfo.getListClosedSessionByUser"   arguments="{[]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SessionEvent.GET_LIST_CLOSED_SESSION_ALL}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="sessionInfo.getListClosedSession"   arguments="{[]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>	
		
		<mate:EventHandlers type="{SessionEvent.GET_LIST_OBSEL}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.getTraceUser"   arguments="{[event.traceId, event.sessionId]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>	
		
		<mate:EventHandlers type="{SessionEvent.GET_LIST_OBSEL_CLOSED_SESSION}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.getObselByClosedSession"   arguments="{[event.sessionId]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
<!-- OBSEL COMMENT -->
		<mate:EventHandlers type="{TraceLineEvent.ADD_COMMENT_OBSEL}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.addObselComment"   arguments="{[event.traceComment, event.traceParent, event.typeObsel,
							  event.textComment, event.beginTime, event.endTime, event.forUserId, event.sessionId, event.timeStamp]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
<!-- OBSEL ACTIVITY RETRO -->
		<mate:EventHandlers type="{VisuModuleEvent.WALK_OUT_MODULE}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.walkOutSalonRetro"   arguments="{[]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{VisuModuleEvent.GO_IN_MODULE}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.goInSalonRetro"   arguments="{[]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_VIDEO_PLAYER}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroRoomVideoEvent"   arguments="{[event.typeAction, event.timePlayer]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_EXPLORE_OBSEL}" useCapture="true" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroExploreObselEvent"   arguments="{[TraceModel.RETRO_EXPLORE_OBSEL_EVENT, event.timeStamp, event.text]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_EXPAND_TRACE_LINE}" useCapture="true" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroExpandTraceLineEvent"   arguments="{[event.userId, event.nameUserTraceLine, event.avatarUser, event.isOpen]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_TRACE_LINE}" useCapture="true" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroObselTypeLineEvent"   arguments="{[event.userId, event.nameUserTraceLine, event.avatarUser, event.isPlus,
							  event.typeAddedObsel, event.typeWidget]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_COMMENT_TRACE_LINE}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroStartCreateCommentEvent"   arguments="{[ event.typeAction, event.timeObselBegin, event.timeObselEnd]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{SalonRetroEvent.ACTION_ON_OBSEL_COMMENT_START_EDIT_CANCEL_EDIT}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroRoom.retroStartCancelEditCommentEvent"   arguments="{[ event.typeAction, event.timeObselBegin, event.timeObselEnd, event.timeStamp, event.text, event.editTypeCancel ]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>

	</fx:Declarations>
	
</mate:LocalEventMap>
