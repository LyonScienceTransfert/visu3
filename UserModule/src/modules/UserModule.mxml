<?xml version="1.0" encoding="utf-8"?>
<modules:VisuModuleBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:modules="com.ithaca.visu.modules.*" 
		   xmlns:maps="maps.*"
		   xmlns:mate="http://mate.asfusion.com/"
		   xmlns:controls="com.ithaca.visu.controls.*"
		   configure="configureHandler(event)"
		   creationComplete="creationCompleteHandler(event)"
		   top="0" bottom="0" left="0" right="0" 
		   xmlns:vo="com.ithaca.visu.model.vo.*" 
		   xmlns:user="com.ithaca.visu.view.user.*" 
		   >
	<fx:Declarations>
		<maps:UserMap dispatcher="{this}"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.ithaca.visu.events.InitMapEvent;
			import com.ithaca.visu.events.SessionEvent;
			import com.ithaca.visu.events.VisuModuleEvent;
			import com.ithaca.visu.ui.utils.ConnectionStatus;
			import com.ithaca.visu.view.user.skins.UserManagementSkin;
			import com.ithaca.visu.model.Model;
			import com.ithaca.visu.model.User;
			import com.ithaca.visu.model.vo.UserVO;
			
			import mx.events.FlexEvent;			

			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				trace("InitMapEvent.INIT_MAP_USER");
				dispatchEvent( new InitMapEvent(InitMapEvent.INIT_MAP_USER) );
			}
			
			protected function configureHandler(event:VisuModuleEvent):void
			{				
				if((event.currentTarget as UserModule).parameters != null)
				{
					var param:Object = (event.currentTarget as UserModule).parameters ;
				}
				
				Model.getInstance().setCurrentUserModule(this);
				
				var loggedUser:User =  Model.getInstance().getLoggedUser();
				var statusLoggedUser:int =loggedUser.status; 
				if(statusLoggedUser == ConnectionStatus.CONNECTED)
				{
					// update status connected user
					Model.getInstance().updateStatusLoggedUser(ConnectionStatus.PENDING);
					var outSession:SessionEvent = new SessionEvent(SessionEvent.OUT_SESSION);
					outSession.userId = loggedUser.id_user;
					this.dispatchEvent(outSession);
				}
				// notify thac can use module
				notifyReadyForUse();
			}
			
			public function setModeEditUpdatedUser(userVOUpdated:UserVO):void{
				if(userManagement != null && userManagement.userDetail != null )
				{
					// updated user
					var nbrUser:uint = userManagement.userCollection.length;
					for(var nUser:uint = 0; nUser < nbrUser; nUser++)
					{
						var user:User =  userManagement.userCollection[nUser] as User;
						if(user.id_user == userVOUpdated.id_user)
						{
							// update property 
							user.firstname = userVOUpdated.firstname;
							user.lastname = userVOUpdated.lastname;
							user.mail = userVOUpdated.mail;
							user.password = userVOUpdated.password;
							user.profil = userVOUpdated.profil;
							// set state normal
							userManagement.userDetail.setStateNormal();
							return;
						}
					}
						
				}
			}
			
			public function setModeEditAddedUser(userVOAdded:UserVO):void{
				if(userManagement != null && userManagement.userDetail != null )
				{
					// added user
					var user:User = new User(userVOAdded);
					userManagement.userCollection.addItem(user);
					// set state normal
					userManagement.userDetail.setStateNormal();
				}
			}
			
			public function setModeEditDeletedUser(userId:int):void{
				if(userManagement != null && userManagement.userDetail != null )
				{
					// set state normal

					var nbrUser:uint = userManagement.userCollection.length;
					for(var nUser:uint = 0; nUser < nbrUser; nUser++)
					{
						var user:User =  userManagement.userCollection[nUser] as User;
						if(user.id_user == userId)
						{
							// remove user
							//userManagement.userCollection.removeItemAt[nUser];
							return;
						}
					}
						
				}
			}
			
			protected function visumodulebase1_initializeHandler(event:FlexEvent):void
			{
				//dispatchEvent( new InitMapEvent(InitMapEvent.INIT_MAP_USER) );
			}
			
			//_____________________________________________________________________
			//
			// Utils
			//
			//_____________________________________________________________________		
			private function notifyReadyForUse():void
			{
				var ev:Event = new Event("readyForUse");
				this.dispatchEvent(ev);
			}
		]]>
	</fx:Script>

	<user:UserManagement  id="userManagement" top="0" left="0" right="0" bottom="0"
						  skinClass="com.ithaca.visu.view.user.skins.UserManagementSkin"
						  />
</modules:VisuModuleBase>
