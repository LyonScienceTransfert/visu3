<?xml version="1.0"?>
<mate:LocalEventMap 
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/halo"
        xmlns:mate="http://mate.asfusion.com/"
        xmlns:rtmp="com.flashdevs.mateExt.rtmpService.mate.*">
	<fx:Script>
		<![CDATA[
            import com.asfusion.mate.utils.debug.Debugger;
            import com.flashdevs.mateExt.rtmpService.RtmpService;
            import com.ithaca.documentarisation.events.RetroDocumentEvent;
            import com.ithaca.visu.events.BilanEvent;
            import com.ithaca.visu.events.InitMapEvent;
            import com.ithaca.visu.events.VisuModuleEvent;
            import com.ithaca.visu.model.Model;
            
            import managers.BilanManager;
            
            import mx.events.FlexEvent;

			private var ALL_INFO:int = 777;
		]]>
	</fx:Script>


    <fx:Declarations>
    
		<!-- 
			~~~~~~~~ DEBUGGER ~~~~~~~~
		-->	
		<mate:Debugger level="{Debugger.ALL}"/>

		<!-- 
			~~~~~~~~ EVENTS HANDLERS ~~~~~~~~
		-->	
		<!-- InitMapEvent.INIT_MAP_BILAN __________________________________________________________________ -->		
		<mate:EventHandlers type="{InitMapEvent.INIT_MAP_BILAN}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="testApp"   arguments="{['Bilan']}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{BilanEvent.BILAN_MODULE_LOADED}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroDocument.getOwnedAndSharedRetroDocumentsByUserId"   arguments="{[event.userId]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{BilanEvent.BILAN_LOADED}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="obselInfo.getObselByClosedSession"   arguments="{[event.sessionId, VisuModuleEvent.BILAN_MODULE]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{BilanEvent.NEW_BILAN_SELECTED}" debug="true">
			<rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
				<mate:Request action="retroDocument.getRetroDocumentById"   arguments="{[event.bilanId, false]}" />
			</rtmp:RtmpServiceInvoker>
		</mate:EventHandlers>
				
		<mate:EventHandlers type="{FlexEvent.PREINITIALIZE}">
			<!-- BilanManager creation -->
			<mate:ObjectBuilder generator="{BilanManager}" constructorArguments="{[scope.dispatcher]}"/>
		</mate:EventHandlers>
		
        <!-- USERS -->
        <mate:EventHandlers type="{RetroDocumentEvent.LOAD_LIST_USERS}" debug="true">
            <mate:RemoteObjectInvoker  instance="{remoteUser}" method="listUsers">
                <mate:resultHandlers>
                    <mate:MethodInvoker generator="{BilanManager}" method="onLoadListUsers" arguments="{[resultObject]}"/>
                </mate:resultHandlers>
                <mate:faultHandlers>
                    <mate:MethodInvoker generator="{BilanManager}"
                        method="error" arguments="{[currentEvent]}"/>
                </mate:faultHandlers>
            </mate:RemoteObjectInvoker>
        </mate:EventHandlers>
        
        <!-- Update shared users the bilan -->
        <mate:EventHandlers type="{RetroDocumentEvent.UPDATE_RETRO_DOCUMENT}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="retroDocument.updateRetroDocument"   arguments="{[event.retroDocumentVO , event.listUser]}" />
            </rtmp:RtmpServiceInvoker>
        </mate:EventHandlers>
		
		<!-- Application complete start-->
		
		
		<!-- 
			~~~~~~~~ INJECTORS ~~~~~~~~
		-->
		
		<!--
		  ~~~~~~~~ REMOTEOBJECTS ~~~~~~~~
		-->
		<s:RemoteObject
			id="remoteBilan"
			endpoint="{Model.getInstance().AMFServer}"
			destination="BilanService"
			makeObjectsBindable="true"
			showBusyCursor="true">
		</s:RemoteObject>	
        
        <s:RemoteObject
            id="remoteUser"
            endpoint="{Model.getInstance().AMFServer}"
            destination="UserService"
            makeObjectsBindable="true"
            showBusyCursor="true">
        </s:RemoteObject>
    </fx:Declarations>
</mate:LocalEventMap>
